#!/usr/bin/env python
#
# check_pyre.py
# Generated by AX_AT_DATA_PYREDIFF_PY()
# from https://github.com/lukem/ax_at_check_pattern
#
# python script to process the output of "diff PATTERN OUTPUT" removing lines
# where the difference is a PATTERN line that exactly matches an OUTPUT line.
#

import re
import sys

class Pyrediff:
    def __init__(self):
        self.apat = re.compile("^\d+(,\d+)?[ad]\d+(,\d+)?$")
        self.cpat = re.compile("^\d+(,\d+)?[c]\d+(,\d+)?$")
        self.rv = 0
        self.setmode()

    def pyrediff(self, input):
        for line in input:
            line = line.rstrip("\n")
            if self.apat.match(line):
                print line
                self.setmode()
                self.rv = 1
            elif self.cpat.match(line):
                self.setmode(line)
            elif not self.mode:
                print line
            elif line.startswith("< "):
                self.ll.append(line)
            elif "---" == line:
                pass
            elif line.startswith("> "):
                self.rl.append(line)
                if len(self.rl) > len(self.ll):
                    self.mismatch()
                else:
                    pat = "^" + self.ll[-1][2:] + "$"
                    str = line[2:]
                    if not re.match(pat, str):
                        self.mismatch()
            else:
                print "UNEXPECTED LINE: %s" % line
                return 10
        return self.rv

    def mismatch(self):
        print self.mode
        print "\n".join(self.ll)
        print "---"
        print "\n".join(self.rl)
        self.setmode()
        self.rv = 1

    def setmode(self, mode=None):
        self.mode = mode
        self.ll = []
        self.rl = []

if "__main__" == __name__:
    pd = Pyrediff()
    sys.exit(pd.pyrediff(sys.stdin))
